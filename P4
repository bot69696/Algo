AIM: Implement quadratic fit search:
CODE:
function quadratic_fit_search(f, a, b, c, n)
    ya, yb, yc = f(a), f(b), f(c)
    for _ in 1:n-3
        denom = ya*(b - c) + yb*(c - a) + yc*(a - b)
        if abs(denom) < 1e-12
            break
        end
        x = 0.5 * (ya*(b^2 - c^2) + yb*(c^2 - a^2) + yc*(a^2 - b^2)) / denom
        yx = f(x)
        if x > b
            if yx > yb
                c, yc = x, yx
            else
                a, ya, b, yb = b, yb, x, yx
            end
        else
            if yx > yb
                a, ya = x, yx
            else
                c, yc, b, yb = b, yb, x, yx
            end
        end
    end
    return a, b, c
end

# Test function
f(x) = x^2 - x + 1
OUTPUT:
quadratic_fit_search(f,0,1,2,10)


function quadratic_fit_search(f, a, b, c, n)
 ya, yb, yc = f(a), f(b), f(c)
 for i in 1:n-3
  print(a,"\n",b,"\n",c,"\n")
  x = 0.5*(ya*(b^2-c^2)+yb*(c^2-a^2)+yc*(a^2-b^2)) /
  (ya*(b-c) +yb*(c-a) +yc*(a-b))
  yx = f(x)
  if x > b
   if yx > yb
    c, yc = x, yx
   else
    a, ya, b, yb = b, yb, x, yx
   end
  elseif x < b
   if yx > yb
    a, ya = x, yx
   else
    c, yc, b, yb = b, yb, x, yx
   end
  end
 end
 return (a, b, c)
end

function f(x)
 return x*x-x+1
end

quadratic_fit_search(f,1,2,3,5)
