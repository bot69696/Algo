AIM: Implement golden section search:

function golden_section_search(f, a, b, n)
ρ = 1.618-1
d = ρ * b + (1 - ρ)*a
yd = f(d)
for i = 1 : n-1
print(a,"\n")
print(b,"\n")
c = ρ*a + (1 - ρ)*b
yc = f(c)
if yc < yd
b, d, yd = d, c, yc
else
a, b = b, c
end
end
return a < b ? (a, b) : (b, a)
end

function f(x)
return x*x-x+1
end

Output: 
golden_section_seaarch(f,1,2,5)

CODE:
function golden_section_search(f, a, b, n)
    ρ = (√5 - 1) / 2   # golden ratio conjugate ≈ 0.618
    d, yd = ρ*b + (1-ρ)*a, f(ρ*b + (1-ρ)*a)
    for _ in 1:n-1
        c, yc = ρ*a + (1-ρ)*b, f(ρ*a + (1-ρ)*b)
        if yc < yd
            b, d, yd = d, c, yc
        else
            a, b = b, c
        end
    end
    return min(a, b), max(a, b)
end


# Test function
f(x) = x^2 - x + 1

Output: 
golden_section_search(f,0,2,10)
